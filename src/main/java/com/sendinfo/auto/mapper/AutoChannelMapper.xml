<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sendinfo.auto.mapper.AutoChannelMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.sendinfo.auto.entity.AutoChannel">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, name, create_time, update_time
    </sql>

    <sql id="Example_Where_Clause">
        <where>
            <!--foreach是对集合进行遍历
                collection="oredCriteria"  指定要遍历的集合
                close="" 表示以什么结束
                index="" 给定一个索引值
                item=""  遍历的每一个元素的值
                open=""  表示以什么开始
                separator="" 表示多个元素的分隔符
                -->
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <!--
                       trim截取字符串：
                       prefix：前缀，为sql整体添加一个前缀
                       prefixOverrides:去除整体字符串前面多余的字符
                       suffixOverrides:去除后面多余的字符串
                       -->

                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <!--当我们不想使用所有的条件，而只是想从多个条件中选择一个使用choose -->
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <select id="selectByExample" parameterType="com.sendinfo.auto.entity.AutoChannelExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from auto_channel
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByName" parameterType="com.sendinfo.auto.entity.AutoChannelExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from auto_channel
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <!--keyProperty和useGeneratedKeys为了添加数据后可以返回这个自增ID-->
    <insert id="insert" parameterType="com.sendinfo.auto.entity.AutoChannelExample" keyProperty="id" useGeneratedKeys="true">
    insert into auto_channel (id, author, editor,
      create_time, update_time, `name`)
    values (#{id,jdbcType=INTEGER}, #{author,jdbcType=VARCHAR}, #{editor,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR})
  </insert>


</mapper>
